#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass extbook
\begin_preamble
\usepackage {graphicx}
\usepackage {longtable}
\usepackage {indentfirst}
\renewenvironment{center}{\par\centering}{\par}

% Comentar linhas abaixo se não estiver usando pacote abntex
% ou se o pacote ainda não foi instalado.
% neste caso sugere-se usar citações no padrão apalike (lembra o da anbt).
%\usepackage[alf ,abnt-etal-cite=2 , abnt-year-extra-label=yes , abnt-etal-list=0]{abntcite}
%\usepackage {helvet}
%\renewcommand {\familydefault}{\sfdefault}

% Para uso de listagens de código
\usepackage{color}
\definecolor{azulclaro}{rgb}{0.6,1,1}%   rgb color model
% Informa que vai usar o pacote listings, 
% disponibilizado em /usr/share/texmf/doc/latex/styles/listings.dvi
\usepackage{listings}
\end_preamble
\use_default_options false
\master DocumentoMestre-Trabalho-ProgramacaoPratica.lyx
\maintain_unincluded_children false
\language brazilian
\language_package auto
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement p
\paperfontsize 12
\spacing onehalf
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Índice
\shortcut idx
\color #008000
\end_index
\paperwidth 210mm
\paperheight 297mm
\leftmargin 30mm
\topmargin 25mm
\rightmargin 20mm
\bottommargin 20mm
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Projeto 
\begin_inset CommandInset label
LatexCommand label
name "chap:Projeto-do-Sistema"

\end_inset


\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
deixar apenas o que for pertinente ao módulo experimental a ser desenvolvido.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lhead{
\backslash
thechapter - Projeto} 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Neste capítulo do projeto de engenharia veremos questões associadas ao projeto
 do sistema, incluindo protocolos, recursos, plataformas suportadas, inplicações
 nos diagramas feitos anteriormente, diagramas de componentes e implantação.
 Na segunda parte revisamos os diagramas levando em conta as decisões do
 projeto do sistema.
\end_layout

\begin_layout Section
Projeto do sistema
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Projeto do sistema
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:Projeto-do-sistema"

\end_inset


\end_layout

\begin_layout Standard
Depois da análise orientada a objeto desenvolve-se o projeto do sistema,
 qual envolve etapas como a definição dos protocolos, da interface API,
 o uso de recursos, a subdivisão do sistema em subsistemas, a alocação dos
 subsistemas ao hardware e a seleção das estruturas de controle, a seleção
 das plataformas do sistema, das bibliotecas externas, dos padrões de projeto,
 além da tomada de decisões conceituais e políticas que formam a infraestrutura
 do projeto.
\end_layout

\begin_layout Standard
Deve-se definir padrões de documentação, padrões para o nome das classes,
 padrões de retorno e de parâmetros em métodos, características da interface
 do usuário e características de desempenho.
 
\end_layout

\begin_layout Standard
Segundo 
\begin_inset CommandInset citation
LatexCommand cite
key "prog-UML-Rumbaugh,prog-UML-blaha"
literal "true"

\end_inset

, o projeto do sistema é a estratégia de alto nível para resolver o problema
 e elaborar uma solução.
 Você deve se preocupar com itens como: 
\end_layout

\begin_layout Enumerate
Protocolos
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Protocolos
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
No software,o usuário poderá escolher se irá entrar com os dados do problema
 de forma manual ou se a entrada de dados será feita de modo que se importe
 arquivos no formato ASCII com extensão .txt.
\end_layout

\begin_layout Itemize
A interface utilizada será em modo texto.
\end_layout

\begin_layout Itemize
O software irá gerar saída de arquivos no formato ASCII com extensão .txt.
\end_layout

\end_deeper
\begin_layout Enumerate
Recursos
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Recursos
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Neste projeto,o programa irá necessitar de utilizar os componentes internos
 do computador, como, por exemplo, HD, processador, mouse e teclado.
\end_layout

\begin_layout Itemize
Os gráficos serão gerados no programa externo Gnuplot.
\end_layout

\end_deeper
\begin_layout Enumerate
Controle
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Controle
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Neste projeto,o controle será sequencial.
\end_layout

\begin_layout Itemize
Não irá haver necessidade de otimização, pois o software e seus componentes
 trabalham com dados pequenos.
\end_layout

\begin_layout Itemize
Identificação e definição de 
\emph on
loops
\emph default
 de controle e das escalas de tempo.
 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Não se aplica.
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Plataformas
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Plataformas
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
O software irá funcionar nos sistema operacionais Windows e GNU/Linux, sendo
 desenvolvido no Windows e testado no Windows e GNU/Linux.
\end_layout

\begin_layout Itemize
A linguagem de programação padrão utilizada é C++.
\end_layout

\begin_layout Itemize
As bibliotecas que serão utilizadas neste projeto são: iomanip, iostream,
 fstream, string, vector, entre outras.
\end_layout

\begin_layout Itemize
O projeto será totalmente desenvolvido na IDE Dev C++ na versão 5.11.
\end_layout

\end_deeper
\begin_layout Enumerate
Padrões de projeto
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Normalmente,os padrões de projeto são identificados e passam a fazer parte
 de uma biblioteca de padrões da empresa.Entretanto, isso só ocorre após
 a realização de diversos projetos.Portanto, não se aplica neste caso.
\end_layout

\end_deeper
\begin_layout Section
Projeto orientado a objeto – POO
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
POO
\end_layout

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Projeto orientado a objeto
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:Projeto-orientado-a-objeto"

\end_inset


\end_layout

\begin_layout Standard
O projeto orientado a objeto é a etapa posterior ao projeto do sistema.
 Baseia-se na análise, mas considera as decisões do projeto do sistema.
 Acrescenta a análise desenvolvida e as características da plataforma escolhida
 (hardware, sistema operacional e linguagem de softwareção).
 Passa pelo maior detalhamento do funcionamento do software, acrescentando
 atributos e métodos que envolvem a solução de problemas específicos não
 identificados durante a análise.
\end_layout

\begin_layout Standard
Envolve a otimização da estrutura de dados e dos algoritmos, a minimização
 do tempo de execução, de memória e de custos.
 Existe um desvio de ênfase para os conceitos da plataforma selecionada.
 
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Exemplo: na análise você define que existe um método para salvar um arquivo
 em disco, define um atributo nomeDoArquivo, mas não se preocupa com detalhes
 específicos da linguagem.
 Já no projeto, você inclui as bibliotecas necessárias para acesso ao disco,
 cria um objeto específico para acessar o disco, podendo, portanto, acrescentar
 novas classes àquelas desenvolvidas na análise.
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Efeitos do projeto no modelo
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
modelo
\end_layout

\end_inset

 estrutural
\begin_inset CommandInset label
LatexCommand label
name "subsec:Efeito-do-projeto-no-modelo-estrutural"

\end_inset


\end_layout

\begin_layout Itemize
Adicionar nos diagramas de pacotes as bibliotecas e subsistemas selecionados
 no projeto do sistema (exemplo: a biblioteca gráfica selecionada).
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Neste projeto foi adicionada a biblioteca gráfica CGnuplot.
\end_layout

\end_deeper
\begin_layout Itemize
Novas classes e associações oriundas das bibliotecas selecionadas e da linguagem
 escolhida devem ser acrescentadas ao modelo.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Não se aplica a este projeto.
\end_layout

\end_deeper
\begin_layout Itemize
Estabelecer as dependências e restrições associadas à plataforma escolhida.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
O 
\shape italic
Software
\shape default
 necessita das plataformas GNU/Linux ou Windows para ser executado.
\end_layout

\begin_layout Itemize
No sistema operacional Windows, é necessário a instalação do 
\shape italic
Software
\shape default
 Gnuplot para o funcionamento do programa.
\end_layout

\end_deeper
\begin_layout Subsubsection
Efeitos do projeto no modelo
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
modelo
\end_layout

\end_inset

 dinâmico
\begin_inset CommandInset label
LatexCommand label
name "subsec:Efeito-do-projeto-no-modelo-dinamico"

\end_inset


\end_layout

\begin_layout Itemize
Revisar os diagramas de seqüência e de comunicação considerando a plataforma
 escolhida.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Após necessidade de criação de uma classe CCalcIP que acessa todas as demias
 classes que calcula o índice de produtividada dos poços de acordo com modelos
 específicos, o diagrama de sequência precisou ser revisado e a sequência
 alterada para inclusão dessa etapa em que a CCalcIP acessasse os cáculos
 das classes herdeiras.
\end_layout

\begin_layout Itemize
O mesmo se aplica ao diagrama de comunicação, com a inclusão dessa classe
 genérica CCalcIP a comunicaão entre as classes do programa precisou ser
 alterada.
\end_layout

\end_deeper
\begin_layout Itemize
Verificar a necessidade de se revisar, ampliar e adicionar novos diagramas
 de máquinas de estado e de atividades.
 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Houve necessidade de revisar, por motivos de mudanças decorridas na forma
 de contrução do código que alteroou a sequência de alguns eventos.
 A classe que antes calculava diretamente o índice de produtividade a partir
 do modelo específico escolhido pelo usuário agora faz parte das muitas
 classes herdeiras que são acessadas pela classe 
\begin_inset Quotes eld
\end_inset

mãe
\begin_inset Quotes erd
\end_inset

 CCalcIP que cacula todos o índice de produtividade a partir de todos os
 métodos, permitindo uma comparação entre eles e definição de qual o melhor
 design de poço em termos de produtividade.
\end_layout

\end_deeper
\begin_layout Subsubsection
Efeitos do projeto nos atributos
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
atributos
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "subsec:Efeito-do-projeto-nos-atributos"

\end_inset


\end_layout

\begin_layout Itemize
Atributos novos podem ser adicionados a uma classe, como, por exemplo, atributos
 específicos de uma determinada linguagem de softwareção (acesso a disco,
 ponteiros, constantes e informações correlacionadas).
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
O atributo de acesso ao disco precisou ser incluído durante a elaboração
 do código para que o usuário pudesse inserir os dados do poço, do reservatório
 e do fluido (dados de entrada) em um arquivo .txt utilizando-o como input
 no programa.
 Esse atributo também está sendo utilizado ao final da execução, pela classe
 CGnuplot que além de gerar os gráficos comparando os difenretes métodos
 também o salva como imagem em disco.
\end_layout

\end_deeper
\begin_layout Subsubsection
Efeitos do projeto nos métodos
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
métodos
\end_layout

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Efeitos do projeto nos métodos
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Em função da plataforma escolhida, verifique as possíveis alterações nos
 métodos.
 O projeto do sistema costuma afetar os métodos de acesso aos diversos dispositi
vos (exemplo: hd, rede).
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Não houve necessidade de alteração dos métodos.
\end_layout

\end_deeper
\begin_layout Itemize
Algoritmos complexos podem ser subdivididos.
 Verifique quais métodos podem ser otimizados.
 Pense em utilizar algoritmos prontos como os da STL (algoritmos genéricos).
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Não se aplica.
\end_layout

\end_deeper
\begin_layout Itemize
Responda a pergunta: os métodos da classes estão dando resposta às responsabilid
ades da classe?
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Os métodos que foram construídos estão gerando resultados coerentes com
 o que é abordado na literatura.
\end_layout

\end_deeper
\begin_layout Itemize
Revise os diagramas de classes, de seqüência e de máquina de estado.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Foram realizadas várias revisões dos diagramas a medida que o código foi
 sendo construído e consequentemente havendo necessidade de tais alterações.
 O número de classes também mudou ao londo do processo, chegando à versão
 final que é a apresentadas neste documento.
\end_layout

\end_deeper
\begin_layout Subsubsection
Efeitos do projeto nas heranças
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
heranças
\end_layout

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Efeitos do projeto nas heranças
\end_layout

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Heranças
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Reorganização das classes e dos métodos (criar métodos genéricos com parâmetros
 que nem sempre são necessários e englobam métodos existentes).
 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Está sendo realizada uma reformulação das classes, separando-as em classes
 menores e conceitos independentes.
 Por exemplo, tínhamos elaborado uma classe para cada modelo de cálculo
 de IP e agora rearranjamos para que fique uma classe reunindo os modelos
 para poços do tipo horizontal e uma outra classe com os do tipo vertical.
\end_layout

\begin_layout Itemize
Além disso, foi criada uma classe genérica de cálculo de IP para que ela
 seja acessada pela CSimulador e a partir daí acessar as classes herdeiras
 que calculam o IP a partir de modelos específicos.
 Anteriormente a CSimulador acessava diretamente todas essas classes.
\end_layout

\end_deeper
\begin_layout Itemize
Abstração do comportamento comum (duas classes podem ter uma superclasse
 em comum).
 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Não se aplica a este projeto.
\end_layout

\end_deeper
\begin_layout Itemize
Utilização de delegação para compartilhar a implementação (quando você cria
 uma herança irreal para reaproveitar código).
 Usar com cuidado.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Não se aplica a este projeto.
\end_layout

\end_deeper
\begin_layout Itemize
Revise as heranças no diagrama de classes.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Foi criado relaciomaneto de herança entre a classe genérica CCalcIP e as
 demais CJoshi, CGiger..
 que calculam o IP a partir de um modelo específico.
\end_layout

\end_deeper
\begin_layout Subsubsection
Efeitos do projeto nas associações
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Efeitos do projeto nas associações
\end_layout

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Associações
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Deve-se definir na fase de projeto como as associações serão implementadas,
 se obedecerão um determinado padrão ou não.
 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
As associações foram criadas e modificadas ao longo do desenvolvimento do
 código, respeitando a hierarquia das classes.
\end_layout

\end_deeper
\begin_layout Itemize
Se existe uma relação de "muitos", pode-se implementar a associação com
 a utilização de um dicionário, que é um mapa das associações entre objetos.
 Assim, o objeto A acessa o dicionário fornecendo uma chave (um nome para
 o objeto que deseja acessar) e o dicionário retorna um valor (um ponteiro)
 para o objeto correto.
 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Não se aplica a este projeto.
\end_layout

\end_deeper
\begin_layout Itemize
Evite percorrer várias associações para acessar dados de classes distantes.
 Pense em adicionar associações diretas.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Não se aplica a este projeto.
 Só houve criação de associações diretas.
\end_layout

\end_deeper
\begin_layout Subsubsection
Efeitos do projeto nas otimizações
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
otimizações
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Faça uma análise de aspectos relativos à otimização do sistema.
 Lembrando que a otimização deve ser desenvolvida por analistas/desenvolvedores
 experientes.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Inicialmente pensamos em solicitar ao usuário os dados de entrada via terminal,
 ao longo do desenvolvimento implementamos a funcionalidade de colocar os
 dados em um arquivo externo que será lido pelo programa ao ser executado.
\end_layout

\end_deeper
\begin_layout Itemize
Identifique pontos a serem otimizados em que podem ser utilizados processos
 concorrentes.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Não identificamos.
\end_layout

\end_deeper
\begin_layout Itemize
Se o acesso a determinados objetos (atributos/métodos) requer um caminho
 longo (exemplo: A->B->C->D.atributo), pense em incluir associações extras
 (exemplo: A-D.atributo).
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Não se aplica a este projeto, todos os atriutos estão sendo acessados de
 forma direta.
\end_layout

\end_deeper
\begin_layout Itemize
Revise as associações nos diagramas de classes.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Foram revisadas a medida que desenvolvemos o código.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Depois de revisados os diagramas da análise você pode montar dois diagramas
 relacionados à infraestrutura do sistema.
 As dependências dos arquivos e bibliotecas podem ser descritos pelo diagrama
 de componentes, e as relações e dependências entre o sistema e o hardware
 podem ser ilustradas com o diagrama de implantação.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Diagrama de componentes
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Diagrama de componentes
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:Diagrama-de-componentes"

\end_inset


\end_layout

\begin_layout Standard
O diagrama de componentes mostra a forma como os componentes do software
 se relacionam, suas dependências.
 Inclui itens como: componentes, subsistemas, executáveis, nós, associações,
 dependências, generalizações, restrições e notas.
 Exemplos de componentes são bibliotecas estáticas, bibliotecas dinâmicas,
 dlls, componentes Java, executáveis, arquivos de disco, código-fonte.
 
\end_layout

\begin_layout Standard
Veja na Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "cap:Diagrama-de-componentes"

\end_inset

 um exemplo de diagrama de componentes.
 Observe que este inclui muitas dependências, ilustrando as relações entre
 os arquivos.
 
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Por exemplo: o subsistema biblioteca inclui os arquivos das classes A e
 B, e a geração dos objetos A.obj e B.obj depende dos arquivos A.h, A.cpp, B.h
 e B.cpp.
 A geração da biblioteca depende dos arquivos A.obj e B.obj.
 O subsistema biblioteca Qt, um subsistema exerno, inclui os arquivos de
 código da biblioteca Qt e a biblioteca em si.
 O subsistema banco de dados representa o banco de dados utilizado pelo
 sistema e tem uma interface de acesso que é utilizada pelo software para
 acesso aos dados armazenados no banco de dados.
 O software executável a ser gerado depende da biblioteca gerada, dos arquivos
 da biblioteca Qt, do módulo de arquivos MinhaJanela e do banco de dados.
\end_layout

\begin_layout Plain Layout
Algumas observações úteis para o diagrama de componentes:
\end_layout

\begin_layout Itemize
De posse do diagrama de componentes, temos a lista de todos os arquivos
 necessários para compilar e rodar o software.
\end_layout

\begin_layout Itemize
Observe que um assunto/pacote pode se transformar em uma biblioteca e será
 incluído no diagrama de componentes.
\end_layout

\begin_layout Itemize
A ligação entre componentes pode incluir um estereótipo indicando o tipo
 de relacionamento ou algum protocolo utilizado.
\begin_inset Note Note
status open

\begin_layout Plain Layout
Na versão final apagar este texto copiado do livro; e colocado aqui para
 lhe auxiliar; deixar somente o que é pertinente ao trabalho
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename C:/Users/Usuario/Desktop/Projeto PP/ProjetoEngenharia-CarolinaB-DouglasR/imagens/Diagrama_Componente.png
	lyxscale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Diagrama de componentes
\begin_inset CommandInset label
LatexCommand label
name "cap:Diagrama-de-componentes"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Diagrama de implantação
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Diagrama de execução
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:Diagrama-de-execução"

\end_inset


\end_layout

\begin_layout Standard
O diagrama de implantação é um diagrama de alto nível que inclui relações
 entre o sistema e o hardware e que se preocupa com os aspectos da arquitetura
 computacional escolhida.
 Seu enfoque é o hardware, a configuração dos nós em tempo de execução.
 
\end_layout

\begin_layout Standard
O diagrama de implantação deve incluir os elementos necessários para que
 o sistema seja colocado em funcionamento: computador, periféricos, processadore
s, dispositivos, nós, relacionamentos de dependência, associação, componentes,
 subsistemas, restrições e notas.
\end_layout

\begin_layout Standard
Veja na Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "cap:Diagrama-de-implantação."

\end_inset

 um exemplo de diagrama de implantação utilizado.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename C:/Users/Usuario/Desktop/Projeto PP/ProjetoEngenharia-CarolinaB-DouglasR/imagens/Diagrama_Implantacao.png
	lyxscale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Diagrama de implantação
\begin_inset CommandInset label
LatexCommand label
name "cap:Diagrama-de-implantação."

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Nota: 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Não perca de vista a visão do todo; do projeto de engenharia como um todo.
 Cada capítulo, cada seção, cada parágrafo deve se encaixar.
 Este é um diferencial fundamental do engenheiro em relação ao técnico,
 a capacidade de desenvolver projetos, de ver o todo e suas diferentes partes,
 de modelar processos/sistemas/produtos de engenharia.
\end_layout

\end_inset


\end_layout

\end_body
\end_document
